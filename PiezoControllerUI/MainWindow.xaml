<Window x:Class="PiezoControllerUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PiezoControllerUI"
        xmlns:controller="clr-namespace:PiezoController;assembly=PiezoController"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindow, IsDesignTimeCreatable=False}"
        Title="Piezo Controlling Machine" Height="450" Width="800">

    <Grid>
        <StackPanel>

            <StackPanel Width="251">
                <Label Content="Choose USB Port for connection to piezo:" HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="230"/>
                <WrapPanel>
                    <ComboBox Name="USBPortsCB" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="120" ItemsSource="{Binding Path=SerialPortNames}" SelectedItem="{Binding Path=SelectedComPort, UpdateSourceTrigger=PropertyChanged}" />
                    <Button x:Name="ButtonConnect" Content="Connect"  HorizontalAlignment="Left" VerticalAlignment="Top" Click="ButtonConnect_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsRunning, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </WrapPanel>
            </StackPanel>
            <Button x:Name="StartStopButton" Height="31" Width="96" Click="StartStop_Click" Margin="0,10,0,10">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Content" Value="Start"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                <Setter Property="Content" Value="Stop"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <DockPanel>
                <StackPanel DockPanel.Dock="Left" Width="222">
                    <RadioButton x:Name="RadioButtonManual" Content="Manual Stimulus:" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="True">
                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>
                    <Label Content="Types of stimuli" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    <ComboBox x:Name="TypeStimuliCB" ItemsSource="{Binding ExecutionModes}" SelectedItem="{Binding Mode, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" />
                    <Label Content="Settings for Stim:" HorizontalAlignment="Left"  VerticalAlignment="Top" />
                    <WrapPanel>
                        <Label x:Name="DCL" Content="DutyCycle" d:Visibility="Visible"  HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mode, UpdateSourceTrigger=PropertyChanged}" Value="SquareWave">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Label.Style>
                        </Label>
                        <TextBox x:Name="DutyCycleTextBox"  d:Visibility="Visible" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="{Binding DutyCycle, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="35" Height="20" >
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Mode, UpdateSourceTrigger=PropertyChanged}" Value="SquareWave">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding AutomaticMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Label x:Name="DCLP" Content="%"  d:Visibility="Visible" HorizontalAlignment="Left"  VerticalAlignment="Top" >
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=TypeStimuliCB}" Value="0">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Label.Style>
                        </Label>
                    </WrapPanel>
                    <WrapPanel>
                        <Label Content="N of Repetitions:" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <TextBox x:Name="RepetitionsTextBox" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Repetitions, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" Width="45" Height="22"  >
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AutomaticMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </WrapPanel>
                    <WrapPanel>
                        <Label Content="Amplitude" HorizontalAlignment="Left"  VerticalAlignment="Top" />
                        <TextBox x:Name="AmpTextBox" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="{Binding Amplitude, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="42" Height="22"  >
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AutomaticMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Label Content="V" HorizontalAlignment="Left" VerticalAlignment="Top"  />
                    </WrapPanel>
                    <WrapPanel>
                        <Label Content="Freq" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <TextBox x:Name="FreqTextBox" HorizontalAlignment="Left"  TextWrapping="Wrap" Text="{Binding Frequency, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="42" Height="20">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AutomaticMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Label Content="Hz" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </WrapPanel>
                </StackPanel>

                <StackPanel DockPanel.Dock="Right" Width="354" Height="97" >
                    <RadioButton x:Name="RadioButtonProtocol"  Content="Automatic Stimulus:"  VerticalAlignment="Top" IsChecked="{Binding AutomaticMode, UpdateSourceTrigger=PropertyChanged}">
                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>
                    <WrapPanel>
                        <Label Content="Set up a protocol:"  HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                        <Button x:Name ="SelectFileButton" IsEnabled="{Binding AutomaticMode, UpdateSourceTrigger=PropertyChanged}" Content="Select File" HorizontalAlignment="Left"  VerticalAlignment="Top" Height="23" Width="90" Click="SelectFileButton_Click"/>
                    </WrapPanel>
                    <Label x:Name="SelectedFileLabel" d:Content="filename" Content="{Binding Filename, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" FontSize="11"/>
                </StackPanel>
            </DockPanel>
        </StackPanel>
    </Grid>
</Window>
